// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudVoiceMVC;

namespace StudVoiceMVC.Migrations
{
    [DbContext(typeof(StudVoiceContext))]
    [Migration("20191130201248_AddedPasword")]
    partial class AddedPasword
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudVoiceMVC.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ__Contacts__A9D10534C6B55886");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasName("UQ__Contacts__5C7E359E696A5168");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("StudVoiceMVC.Faculties", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Facultie__737584F6558150FA");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("StudVoiceMVC.LessonFeedbacks", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<int?>("LessonId")
                        .HasColumnName("LessonID");

                    b.Property<int?>("Point");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("LessonFeedbacks");
                });

            modelBuilder.Entity("StudVoiceMVC.Lessons", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<int?>("TeacherId")
                        .HasColumnName("TeacherID");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("StudVoiceMVC.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Roles__737584F6E27B3C27");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("StudVoiceMVC.TeacherFeedbacks", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<int?>("Point");

                    b.Property<int?>("TeacherId")
                        .HasColumnName("TeacherID");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherFeedbacks");
                });

            modelBuilder.Entity("StudVoiceMVC.Teachers", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("UserId")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudVoiceMVC.UserRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasMaxLength(4000);

                    b.Property<string>("RoleId")
                        .HasMaxLength(4000);

                    b.Property<string>("UserId")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("StudVoiceMVC.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasMaxLength(4000);

                    b.Property<int?>("ContactId");

                    b.Property<int?>("FacultyId");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("Password");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudVoiceMVC.LessonFeedbacks", b =>
                {
                    b.HasOne("StudVoiceMVC.Lessons", "Lesson")
                        .WithMany("LessonFeedbacks")
                        .HasForeignKey("LessonId")
                        .HasConstraintName("FK__LessonFee__Lesso__628FA481");
                });

            modelBuilder.Entity("StudVoiceMVC.Lessons", b =>
                {
                    b.HasOne("StudVoiceMVC.Teachers", "Teacher")
                        .WithMany("Lessons")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Lessons__Teacher__5FB337D6");
                });

            modelBuilder.Entity("StudVoiceMVC.TeacherFeedbacks", b =>
                {
                    b.HasOne("StudVoiceMVC.Teachers", "Teacher")
                        .WithMany("TeacherFeedbacks")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__TeacherFe__Teach__656C112C");
                });

            modelBuilder.Entity("StudVoiceMVC.Teachers", b =>
                {
                    b.HasOne("StudVoiceMVC.Users", "User")
                        .WithMany("Teachers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Teachers__UserId__5CD6CB2B");
                });

            modelBuilder.Entity("StudVoiceMVC.UserRoles", b =>
                {
                    b.HasOne("StudVoiceMVC.Roles", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserRoles__RoleI__59FA5E80");

                    b.HasOne("StudVoiceMVC.Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRoles__UserI__59063A47");
                });

            modelBuilder.Entity("StudVoiceMVC.Users", b =>
                {
                    b.HasOne("StudVoiceMVC.Contacts", "Contact")
                        .WithMany("Users")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("FK__Users__ContactId__52593CB8");

                    b.HasOne("StudVoiceMVC.Faculties", "Faculty")
                        .WithMany("Users")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK__Users__FacultyId__534D60F1");
                });
#pragma warning restore 612, 618
        }
    }
}
